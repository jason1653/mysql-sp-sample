    DECLARE _UNIVERSITY_CD VARCHAR(5);
	DECLARE _UNIVERSITY_NM VARCHAR(50);
	DECLARE _CUSTOM VARCHAR(1);
	DECLARE _LECTURE_INFO_CD VARCHAR(25);
	DECLARE _LECTURE_INFO_NM VARCHAR(30);
	DECLARE _LECTURE_INFO_CD_TMP VARCHAR(17);
	DECLARE _LECTURE_MAX INT;
	
	DECLARE _LECTURE_CNT INT;
	DECLARE _LECTURE_CNT_LOOP INT;
	DECLARE _LECTURE_INDIVIDUAL_CD VARCHAR(25);
	DECLARE _LECTURE_SUB_MAX INT;
	
		/** 대학교 명 조합 **/
	IF in_UNIVERSITY_SUB_NM <> '' THEN
		SET _UNIVERSITY_NM = CONCAT(in_UNIVERSITY_NM, ' ', in_UNIVERSITY_SUB_NM);
	ELSE
		SET _UNIVERSITY_NM = in_UNIVERSITY_NM;
	END IF;
	
	/** 대학교 코드 가져오기 **/
	SET _UNIVERSITY_CD = (SELECT UNIVERSITY_CD FROM CODE_UNIVERSITY WHERE UNIVERSITY_NM = _UNIVERSITY_NM LIMIT 1);
	
	SET _CUSTOM = IFNULL((SELECT UNIVERSITY_CUSTOM FROM CODE_UNIVERSITY WHERE UNIVERSITY_CD = _UNIVERSITY_CD LIMIT 1),'N');
	
	IF LEFT(_UNIVERSITY_CD,3) = '022' AND in_YEAR = '21' AND in_MONTH = '01' THEN
		SET _CUSTOM = 'T';
	END IF;

	
	
	IF _CUSTOM = 'Y' THEN
		IF NOT EXISTS(SELECT * FROM LECTURE WHERE LECTURE_CD LIKE CONCAT(_UNIVERSITY_CD,'%') AND LECTURE_NM = in_LECTURE_NM) THEN
			SET _LECTURE_MAX = IFNULL((SELECT MAX(MID(LECTURE_CD, 6,10)) FROM LECTURE WHERE LECTURE_CD LIKE CONCAT(_UNIVERSITY_CD,'%')),0);
			
			
			SET _LECTURE_INFO_CD = CONCAT(_UNIVERSITY_CD, LPAD(_LECTURE_MAX+1,10,0), "C00");
-- 			SELECT _LECTURE_INFO_CD;
-- 			LEAVE BLOCK;
			INSERT INTO LECTURE (LECTURE_CD, LECTURE_NM) VALUES (_LECTURE_INFO_CD, in_LECTURE_NM);
			
		ELSE
			SET _LECTURE_INFO_CD = (SELECT LECTURE_CD FROM LECTURE WHERE LECTURE_CD LIKE CONCAT(_UNIVERSITY_CD,'%') AND LECTURE_NM = in_LECTURE_NM LIMIT 1);
		END IF;
	ELSEIF _CUSTOM = 'T' THEN
		/** 임시 강의코드 **/
		SET _LECTURE_INFO_CD_TMP = CONCAT(_UNIVERSITY_CD, LPAD(in_LECTURE_REAL_CD,10,0));
		
		/** 강의코드 **/
		SET _LECTURE_INFO_CD = CONCAT(_UNIVERSITY_CD, LPAD(in_LECTURE_REAL_CD,10,0), "C00");
		
		/** 순번 **/
		SET _LECTURE_CNT_LOOP = 0;
		
		/** 포함된 강의 데이터 갯수 가져오기 */
		SET _LECTURE_CNT = (SELECT COUNT(*) FROM LECTURE WHERE LECTURE_CD LIKE CONCAT(_UNIVERSITY_CD, '%') AND LECTURE_NM = in_LECTURE_NM);
		
-- 		SELECT _LECTURE_CNT;
		IF _LECTURE_CNT = 0 THEN
			LOOP_CHECK:LOOP
			
				SET _LECTURE_INFO_CD = CONCAT(_UNIVERSITY_CD, LPAD(in_LECTURE_REAL_CD,10,0), "C", LPAD(_LECTURE_CNT_LOOP,2,0));
				
				IF NOT EXISTS(SELECT * FROM LECTURE WHERE LECTURE_CD = _LECTURE_INFO_CD) THEN
					INSERT INTO LECTURE (LECTURE_CD, LECTURE_NM) VALUES (_LECTURE_INFO_CD, in_LECTURE_NM);
					LEAVE LOOP_CHECK;
				END IF;
-- 				INSERT INTO LECTURE (LECTURE_CD, LECTURE_NM) VALUES (_LECTURE_INFO_CD, in_LECTURE_NM);
				
				
				SET _LECTURE_CNT_LOOP = _LECTURE_CNT_LOOP + 1;
			END LOOP;
		ELSE
			SET _LECTURE_INFO_CD = (SELECT LECTURE_CD FROM LECTURE WHERE LECTURE_CD LIKE CONCAT(_UNIVERSITY_CD, '%') AND LECTURE_NM = in_LECTURE_NM);
		END IF;
	
	ELSE
		/** 임시 강의코드 **/
		SET _LECTURE_INFO_CD_TMP = CONCAT(_UNIVERSITY_CD, LPAD(in_LECTURE_REAL_CD,10,0));
		
		/** 강의코드 **/
		SET _LECTURE_INFO_CD = CONCAT(_UNIVERSITY_CD, LPAD(in_LECTURE_REAL_CD,10,0), "C00");
		
		/** 순번 **/
		SET _LECTURE_CNT_LOOP = 0;
		
		/** 포함된 강의 데이터 갯수 가져오기 */
		SET _LECTURE_CNT = (SELECT COUNT(*) FROM LECTURE WHERE LECTURE_CD LIKE CONCAT(_LECTURE_INFO_CD_TMP, '%'));

-- 		SELECT _LECTURE_CNT;
		IF _LECTURE_CNT = 0 THEN
			INSERT INTO LECTURE (LECTURE_CD, LECTURE_NM) VALUES (_LECTURE_INFO_CD, in_LECTURE_NM);
		ELSE
			LOOP_CHECK:LOOP
				

				SET _LECTURE_INFO_NM = (SELECT LECTURE_NM FROM LECTURE WHERE LECTURE_CD = _LECTURE_INFO_CD);

				/** 이름이 동일하면 LOOP 종료 **/
				IF 
					SUBSTRING_INDEX(in_LECTURE_NM,'(', 1) = SUBSTRING_INDEX(_LECTURE_INFO_NM,'(',1) 
					OR SUBSTRING_INDEX(in_LECTURE_NM,'-', 1) = SUBSTRING_INDEX(_LECTURE_INFO_NM,'-',1) 
					OR SUBSTRING_INDEX(in_LECTURE_NM,'<', 1) = SUBSTRING_INDEX(_LECTURE_INFO_NM,'<',1) 

				THEN
					SET _LECTURE_INFO_CD = _LECTURE_INFO_CD;
					LEAVE LOOP_CHECK;
					
				END IF;
				
				
-- 				SELECT _LECTURE_INFO_CD, in_LECTURE_NM, _LECTURE_INFO_NM;
-- 				LEAVE BLOCK;
-- 				
				
				IF (_LECTURE_CNT < _LECTURE_CNT_LOOP) THEN
					LEAVE LOOP_CHECK;
				END IF;

-- 				SELECT _LECTURE_INFO_CD, in_LECTURE_NM, _LECTURE_INFO_NM, _LECTURE_CNT_LOOP;
				SET _LECTURE_INFO_CD = CONCAT(_UNIVERSITY_CD, LPAD(in_LECTURE_REAL_CD,10,0), "C", LPAD(_LECTURE_CNT_LOOP,2,0));
-- 				SELECT _LECTURE_INFO_CD;
				
				
				IF NOT EXISTS(SELECT * FROM LECTURE WHERE LECTURE_CD = _LECTURE_INFO_CD) THEN
					INSERT INTO LECTURE (LECTURE_CD, LECTURE_NM) VALUES (_LECTURE_INFO_CD, in_LECTURE_NM);
					LEAVE LOOP_CHECK;
				END IF;
				
				
				SET _LECTURE_CNT_LOOP = _LECTURE_CNT_LOOP + 1;
				
			END LOOP;
		END IF;
		
		
		
		
		
	END IF;
	
	IF _LECTURE_INFO_CD = '' THEN
		SET _LECTURE_INFO_CD = CONCAT(_UNIVERSITY_CD, LPAD(in_LECTURE_REAL_CD,10,0), "C00");
	END IF;
	
	


	SET _LECTURE_INDIVIDUAL_CD = (SELECT LECTURE_INDIVIDUAL_CD FROM LECTURE_INDIVIDUAL WHERE LECTURE_INDIVIDUAL_CD LIKE CONCAT(_LECTURE_INFO_CD, LPAD(in_YEAR,2,0), LPAD(in_MONTH,2,0), '%') AND LECTURE_SUB_CD = in_BUNBAN LIMIT 1);
-- 					SELECT _LECTURE_INDIVIDUAL_CD;
				
	
	IF _LECTURE_INDIVIDUAL_CD IS NULL THEN
		
		SET _LECTURE_SUB_MAX = IFNULL((SELECT MAX(RIGHT(LECTURE_INDIVIDUAL_CD,3)) FROM LECTURE_INDIVIDUAL WHERE LECTURE_INDIVIDUAL_CD LIKE CONCAT(_LECTURE_INFO_CD, LPAD(in_YEAR,2,0), LPAD(in_MONTH,2,0), '%')),0);
		SET _LECTURE_SUB_MAX = _LECTURE_SUB_MAX + 1;
		
		SET _LECTURE_INDIVIDUAL_CD = CONCAT(_LECTURE_INFO_CD, LPAD(in_YEAR,2,0), LPAD(in_MONTH,2,0), LPAD(_LECTURE_SUB_MAX,3,0));
		
		
		IF NOT EXISTS(SELECT * FROM LECTURE_INDIVIDUAL WHERE LECTURE_INDIVIDUAL_CD = _LECTURE_INDIVIDUAL_CD) THEN
			INSERT INTO LECTURE_INDIVIDUAL (
				LECTURE_INDIVIDUAL_CD
				,LECTURE_CD
				,LECTURE_COMMON_CD
				,LECTURE_SUB_CD
				,LECTURE_SUB_NM
				,GRADE_YEAR
				,GRADE_SCORE
				,CATEGORY
				,`SCHEDULE`
				,PLACE
				,ETC
			) VALUES (
				_LECTURE_INDIVIDUAL_CD
				,_LECTURE_INFO_CD
				,in_LECTURE_COMMON_CD
				,in_BUNBAN
				,in_LECTURE_NM
				,in_GRADE_YEAR
				,in_GRADE_SCORE
				,in_CATEGORY
				,in_SCHEDULE
				,in_PLACE
				,in_ETC
			);
		END IF;
		
	ELSE
		SET _LECTURE_SUB_MAX = IFNULL((SELECT MAX(RIGHT(LECTURE_INDIVIDUAL_CD,3)) FROM LECTURE_INDIVIDUAL WHERE LECTURE_INDIVIDUAL_CD LIKE CONCAT(_LECTURE_INFO_CD, LPAD(in_YEAR,2,0), LPAD(in_MONTH,2,0), '%')),0);
		SET _LECTURE_SUB_MAX = _LECTURE_SUB_MAX + 1;
		
		SET _LECTURE_INDIVIDUAL_CD = CONCAT(_LECTURE_INFO_CD, LPAD(in_YEAR,2,0), LPAD(in_MONTH,2,0), LPAD(_LECTURE_SUB_MAX,3,0));
		
		
		IF NOT EXISTS(SELECT * FROM LECTURE_INDIVIDUAL WHERE LECTURE_INDIVIDUAL_CD = _LECTURE_INDIVIDUAL_CD) THEN
			INSERT INTO LECTURE_INDIVIDUAL (
				LECTURE_INDIVIDUAL_CD
				,LECTURE_CD
				,LECTURE_COMMON_CD
				,LECTURE_SUB_CD
				,LECTURE_SUB_NM
				,GRADE_YEAR
				,GRADE_SCORE
				,CATEGORY
				,`SCHEDULE`
				,PLACE
				,ETC
			) VALUES (
				_LECTURE_INDIVIDUAL_CD
				,_LECTURE_INFO_CD
				,in_LECTURE_COMMON_CD
				,in_BUNBAN
				,in_LECTURE_NM
				,in_GRADE_YEAR
				,in_GRADE_SCORE
				,in_CATEGORY
				,in_SCHEDULE
				,in_PLACE
				,in_ETC
			);
		END IF;
		
	END IF;
		

	
	SELECT 
			_LECTURE_INFO_CD as LECTURE_INFO_CD
			,_LECTURE_INDIVIDUAL_CD as LECTURE_INDIVIDUAL_CD;